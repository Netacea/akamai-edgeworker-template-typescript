{"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/kinesisingest/src/index.ts":{"path":"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/kinesisingest/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":24},"end":{"line":3,"column":50}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":42}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":0},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/kinesisingest/src/index.ts","sources":["/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/kinesisingest/src/index.ts"],"names":[],"mappings":";;AAAA,mDAA2C;AAC3C,kBAAe,uBAAa,CAAA","sourcesContent":["import KinesisIngest from './KinesisIngest'\nexport default KinesisIngest\nexport {\n  KinesisIngestArgs,\n  KinesisIngestWebLog,\n  KinesisIngestConfigArgs\n} from './KinesisIngest'\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"75b272b183ccc56578ab2edf0c89ae360733c09b","contentHash":"38366a35f0bb48c102b06564c869d15f07204d529b25704596556e17a120b2c2"},"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/kinesisingest/src/KinesisIngest.ts":{"path":"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/kinesisingest/src/KinesisIngest.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":38}},"2":{"start":{"line":5,"column":4},"end":{"line":7,"column":7}},"3":{"start":{"line":6,"column":8},"end":{"line":6,"column":32}},"4":{"start":{"line":11,"column":8},"end":{"line":11,"column":31}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":35}},"6":{"start":{"line":13,"column":8},"end":{"line":13,"column":27}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":33}},"8":{"start":{"line":15,"column":8},"end":{"line":15,"column":51}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":49}},"10":{"start":{"line":17,"column":8},"end":{"line":17,"column":49}},"11":{"start":{"line":18,"column":8},"end":{"line":22,"column":9}},"12":{"start":{"line":21,"column":12},"end":{"line":21,"column":53}},"13":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"14":{"start":{"line":24,"column":12},"end":{"line":24,"column":45}},"15":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"16":{"start":{"line":29,"column":12},"end":{"line":29,"column":19}},"17":{"start":{"line":31,"column":27},"end":{"line":31,"column":45}},"18":{"start":{"line":32,"column":8},"end":{"line":32,"column":27}},"19":{"start":{"line":33,"column":8},"end":{"line":54,"column":9}},"20":{"start":{"line":34,"column":25},"end":{"line":38,"column":45}},"21":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"22":{"start":{"line":40,"column":16},"end":{"line":40,"column":75}},"23":{"start":{"line":42,"column":12},"end":{"line":48,"column":15}},"24":{"start":{"line":51,"column":12},"end":{"line":51,"column":46}},"25":{"start":{"line":53,"column":12},"end":{"line":53,"column":29}},"26":{"start":{"line":57,"column":8},"end":{"line":57,"column":32}},"27":{"start":{"line":58,"column":8},"end":{"line":63,"column":9}},"28":{"start":{"line":59,"column":12},"end":{"line":59,"column":36}},"29":{"start":{"line":60,"column":12},"end":{"line":60,"column":54}},"30":{"start":{"line":61,"column":12},"end":{"line":61,"column":49}},"31":{"start":{"line":62,"column":12},"end":{"line":62,"column":37}},"32":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"33":{"start":{"line":65,"column":12},"end":{"line":65,"column":56}},"34":{"start":{"line":69,"column":0},"end":{"line":69,"column":32}}},"fnMap":{"0":{"name":"sleep","decl":{"start":{"line":4,"column":15},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":25},"end":{"line":8,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":5,"column":29},"end":{"line":5,"column":30}},"loc":{"start":{"line":5,"column":40},"end":{"line":7,"column":5}},"line":5},"2":{"name":"(anonymous_2)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":107},"end":{"line":26,"column":5}},"line":10},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":36},"end":{"line":55,"column":5}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":35},"end":{"line":67,"column":5}},"line":56}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":18,"column":8},"end":{"line":22,"column":9}},{"start":{"line":18,"column":8},"end":{"line":22,"column":9}}],"line":18},"1":{"loc":{"start":{"line":18,"column":12},"end":{"line":20,"column":32}},"type":"binary-expr","locations":[{"start":{"line":18,"column":12},"end":{"line":18,"column":42}},{"start":{"line":19,"column":12},"end":{"line":19,"column":52}},{"start":{"line":20,"column":12},"end":{"line":20,"column":32}}],"line":18},"2":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"3":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},{"start":{"line":28,"column":8},"end":{"line":30,"column":9}}],"line":28},"4":{"loc":{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},"type":"if","locations":[{"start":{"line":39,"column":12},"end":{"line":41,"column":13}},{"start":{"line":39,"column":12},"end":{"line":41,"column":13}}],"line":39},"5":{"loc":{"start":{"line":58,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":63,"column":9}},{"start":{"line":58,"column":8},"end":{"line":63,"column":9}}],"line":58},"6":{"loc":{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},"type":"if","locations":[{"start":{"line":64,"column":8},"end":{"line":66,"column":9}},{"start":{"line":64,"column":8},"end":{"line":66,"column":9}}],"line":64}},"s":{"0":1,"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"file":"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/kinesisingest/src/KinesisIngest.ts","sources":["/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/kinesisingest/src/KinesisIngest.ts"],"names":[],"mappings":";;AAAA,uCAA+B;AAkB/B,KAAK,UAAU,KAAK,CAAE,EAAU;IAC9B,OAAO,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;QACjC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;IACzB,CAAC,CAAC,CAAA;AACJ,CAAC;AAKD,MAAqB,aAAa;IAShC,YAAa,EACX,iBAAiB,EACjB,gBAAgB,EAChB,gBAAgB,EAChB,gBAAgB,EAChB,YAAY,EACM;QAXD,iBAAY,GAAW,EAAE,CAAA;QACzB,qBAAgB,GAAW,EAAE,CAAA;QACtC,aAAQ,GAA0B,EAAE,CAAA;QACtC,gBAAW,GAAY,KAAK,CAAA;QASlC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAA;QAC1C,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAA;QACxC,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAA;QACxC,IACE,gBAAgB,KAAK,SAAS;YAC9B,gBAAgB,GAAG,IAAI,CAAC,gBAAgB;YACxC,gBAAgB,GAAG,CAAC,EACpB;YACA,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAA;SACzC;QACD,IAAI,YAAY,KAAK,SAAS,EAAE;YAC9B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;SACjC;IACH,CAAC;IAEM,KAAK,CAAC,YAAY,CAA0C,WAAwB;QACzF,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,OAAM;SACP;QACD,MAAM,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAA;QACrC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;QAClB,IAAI;YACF,MAAM,IAAI,GAAG,iBAAO,CAAC,WAAW,CAAC;gBAC/B,UAAU,EAAE,IAAI,CAAC,iBAAiB;gBAClC,WAAW,EAAE,IAAI,CAAC,gBAAgB;gBAClC,eAAe,EAAE,IAAI,CAAC,gBAAgB;aACvC,EAAE,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAA;YACjC,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAA;aAC3D;YAED,MAAM,WAAW,CAAC;gBAChB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,IAAI,EAAE,WAAW,IAAI,CAAC,QAAQ,EAAE;gBAChC,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB,CAAC,CAAA;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAA;YACjC,sCAAsC;YACtC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SACjB;IACH,CAAC;IAEM,KAAK,CAAC,MAAM,CAClB,GAAc,EAAE,WAAwB;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACvB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;YACvB,MAAM,KAAK,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAA;YACzC,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAA;YACpC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAA;SACzB;QACD,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE;YAC7C,OAAO,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,CAAA;SAC5C;IACH,CAAC;CACF;AA1ED,gCA0EC","sourcesContent":["import Kinesis from './Kinesis'\nexport type KinesisMakeRequest = (args: {\n  headers: {[key: string]: string}\n  method: 'POST' | 'GET'\n  host: string\n  path: string\n  body?: any\n}) => Promise<any>\nexport interface KinesisIngestWebLog {\n  apiKey: string\n}\nexport interface KinesisIngestConfigArgs {\n  kinesisStreamName: string\n  kinesisAccessKey?: string\n  kinesisSecretKey?: string\n  logBatchSize?: number\n  maxLogAgeSeconds?: number\n}\nasync function sleep (ms: number): Promise<void> {\n  return await new Promise(resolve => {\n    setTimeout(resolve, ms)\n  })\n}\nexport interface KinesisIngestArgs extends KinesisIngestConfigArgs {\n  apiKey: string\n}\n\nexport default class KinesisIngest {\n  protected readonly kinesisStreamName: string\n  protected readonly kinesisAccessKey?: string\n  protected readonly kinesisSecretKey?: string\n  protected readonly logBatchSize: number = 20\n  protected readonly maxLogAgeSeconds: number = 10\n  protected logCache: KinesisIngestWebLog[] = []\n  private intervalSet: boolean = false\n\n  constructor ({\n    kinesisStreamName,\n    kinesisAccessKey,\n    kinesisSecretKey,\n    maxLogAgeSeconds,\n    logBatchSize\n  }: KinesisIngestArgs) {\n    this.kinesisStreamName = kinesisStreamName\n    this.kinesisAccessKey = kinesisAccessKey\n    this.kinesisSecretKey = kinesisSecretKey\n    if (\n      maxLogAgeSeconds !== undefined &&\n      maxLogAgeSeconds < this.maxLogAgeSeconds &&\n      maxLogAgeSeconds > 0\n    ) {\n      this.maxLogAgeSeconds = maxLogAgeSeconds\n    }\n    if (logBatchSize !== undefined) {\n      this.logBatchSize = logBatchSize\n    }\n  }\n\n  public async putToKinesis <MakeRequest extends KinesisMakeRequest>(makeRequest: MakeRequest): Promise<void> {\n    if (this.logCache.length === 0) {\n      return\n    }\n    const localCache = [...this.logCache]\n    this.logCache = []\n    try {\n      const data = Kinesis.signRequest({\n        streamName: this.kinesisStreamName,\n        accessKeyId: this.kinesisAccessKey,\n        secretAccessKey: this.kinesisSecretKey\n      }, localCache, this.logBatchSize)\n      if (data === undefined) {\n        throw new Error('Kinesis Sign request returned undefined')\n      }\n\n      await makeRequest({\n        headers: data.headers,\n        host: `https://${data.hostname}`,\n        method: data.method,\n        path: data.path,\n        body: data.body\n      })\n    } catch (e) {\n      this.logCache.push(...localCache)\n      // eslint-disable-next-line no-console\n      console.error(e)\n    }\n  }\n\n  public async ingest <LogFormat extends KinesisIngestWebLog, MakeRequest extends KinesisMakeRequest>\n  (log: LogFormat, makeRequest: MakeRequest): Promise<any> {\n    this.logCache.push(log)\n    if (!this.intervalSet) {\n      this.intervalSet = true\n      await sleep(this.maxLogAgeSeconds * 1000)\n      await this.putToKinesis(makeRequest)\n      this.intervalSet = false\n    }\n    if (this.logCache.length >= this.logBatchSize) {\n      return await this.putToKinesis(makeRequest)\n    }\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a25234d55b6531bbb7d4fc68fa834227f8ae7ae4","contentHash":"de55eb783fe6633e02b006b0eaf61ae039633bf4db5b1c4bc43cb496b30d308b"}}