{"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/captchafeedback/src/index.ts":{"path":"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/captchafeedback/src/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":26},"end":{"line":3,"column":54}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":44}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/captchafeedback/src/index.ts","sources":["/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/captchafeedback/src/index.ts"],"names":[],"mappings":";;AAAA,uDAA+C;AAC/C,kBAAe,yBAAe,CAAA","sourcesContent":["import CaptchaFeedback from './CaptchaFeedback'\nexport default CaptchaFeedback\nexport {\n  CaptchaFeedbackArgs,\n  MakeRequest,\n  MakeRequestArgs,\n  MakeRequestResponse,\n  UpdateCaptchaArgs,\n  UpdateCaptchaResponse\n} from './CaptchaFeedback'\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e7e50f6bc6a18591756060b100e2118a9e54fdfc","contentHash":"0c5fd389c03db7d0bc52c32646e36f2165cb028ed92e8e245e049e85c17f772a"},"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/captchafeedback/src/CaptchaFeedback.ts":{"path":"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/captchafeedback/src/CaptchaFeedback.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":7,"column":9}},"2":{"start":{"line":6,"column":12},"end":{"line":6,"column":71}},"3":{"start":{"line":8,"column":8},"end":{"line":8,"column":29}},"4":{"start":{"line":9,"column":8},"end":{"line":9,"column":57}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":39}},"6":{"start":{"line":13,"column":8},"end":{"line":49,"column":9}},"7":{"start":{"line":14,"column":29},"end":{"line":28,"column":14}},"8":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"9":{"start":{"line":30,"column":16},"end":{"line":30,"column":116}},"10":{"start":{"line":32,"column":27},"end":{"line":32,"column":69}},"11":{"start":{"line":33,"column":33},"end":{"line":33,"column":76}},"12":{"start":{"line":34,"column":34},"end":{"line":34,"column":83}},"13":{"start":{"line":35,"column":40},"end":{"line":35,"column":90}},"14":{"start":{"line":36,"column":12},"end":{"line":41,"column":14}},"15":{"start":{"line":45,"column":12},"end":{"line":45,"column":29}},"16":{"start":{"line":46,"column":12},"end":{"line":48,"column":14}},"17":{"start":{"line":52,"column":8},"end":{"line":52,"column":68}},"18":{"start":{"line":52,"column":50},"end":{"line":52,"column":66}},"19":{"start":{"line":55,"column":8},"end":{"line":65,"column":9}},"20":{"start":{"line":56,"column":12},"end":{"line":64,"column":13}},"21":{"start":{"line":58,"column":16},"end":{"line":58,"column":51}},"22":{"start":{"line":62,"column":16},"end":{"line":63,"column":111}},"23":{"start":{"line":66,"column":8},"end":{"line":74,"column":9}},"24":{"start":{"line":67,"column":29},"end":{"line":69,"column":14}},"25":{"start":{"line":70,"column":12},"end":{"line":73,"column":14}},"26":{"start":{"line":75,"column":8},"end":{"line":75,"column":57}},"27":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"28":{"start":{"line":79,"column":12},"end":{"line":79,"column":48}},"29":{"start":{"line":81,"column":8},"end":{"line":81,"column":49}},"30":{"start":{"line":84,"column":0},"end":{"line":84,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":99},"end":{"line":11,"column":5}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":80},"end":{"line":50,"column":5}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":51,"column":4},"end":{"line":51,"column":5}},"loc":{"start":{"line":51,"column":21},"end":{"line":53,"column":5}},"line":51},"3":{"name":"(anonymous_3)","decl":{"start":{"line":52,"column":44},"end":{"line":52,"column":45}},"loc":{"start":{"line":52,"column":50},"end":{"line":52,"column":66}},"line":52},"4":{"name":"(anonymous_4)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":59},"end":{"line":76,"column":5}},"line":54},"5":{"name":"(anonymous_5)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":33},"end":{"line":82,"column":5}},"line":77}},"branchMap":{"0":{"loc":{"start":{"line":4,"column":26},"end":{"line":4,"column":82}},"type":"default-arg","locations":[{"start":{"line":4,"column":49},"end":{"line":4,"column":82}}],"line":4},"1":{"loc":{"start":{"line":5,"column":8},"end":{"line":7,"column":9}},"type":"if","locations":[{"start":{"line":5,"column":8},"end":{"line":7,"column":9}},{"start":{"line":5,"column":8},"end":{"line":7,"column":9}}],"line":5},"2":{"loc":{"start":{"line":5,"column":12},"end":{"line":5,"column":51}},"type":"binary-expr","locations":[{"start":{"line":5,"column":12},"end":{"line":5,"column":27}},{"start":{"line":5,"column":31},"end":{"line":5,"column":51}}],"line":5},"3":{"loc":{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},"type":"if","locations":[{"start":{"line":29,"column":12},"end":{"line":31,"column":13}},{"start":{"line":29,"column":12},"end":{"line":31,"column":13}}],"line":29},"4":{"loc":{"start":{"line":55,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":55,"column":8},"end":{"line":65,"column":9}},{"start":{"line":55,"column":8},"end":{"line":65,"column":9}}],"line":55},"5":{"loc":{"start":{"line":66,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":74,"column":9}},{"start":{"line":66,"column":8},"end":{"line":74,"column":9}}],"line":66},"6":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78}},"s":{"0":1,"1":8,"2":2,"3":6,"4":6,"5":6,"6":6,"7":6,"8":5,"9":1,"10":4,"11":4,"12":4,"13":4,"14":4,"15":2,"16":2,"17":1,"18":1,"19":2,"20":2,"21":2,"22":1,"23":1,"24":1,"25":1,"26":0,"27":6,"28":4,"29":2,"30":1},"f":{"0":8,"1":6,"2":1,"3":1,"4":2,"5":6},"b":{"0":[6],"1":[2,6],"2":[8,7],"3":[1,4],"4":[2,0],"5":[1,0],"6":[4,2]},"inputSourceMap":{"version":3,"file":"/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/captchafeedback/src/CaptchaFeedback.ts","sources":["/mnt/c/Users/MarekIzdebski/Documents/repositories/JavascriptATAIntegration/modules/captchafeedback/src/CaptchaFeedback.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  AxiosStatic\n} from 'axios'\nexport type MakeRequest = (args: MakeRequestArgs) => Promise<MakeRequestResponse>\n\nexport interface CaptchaFeedbackArgs {\n  /**\n   * API Key provided by Netacea\n   */\n  apiKey: string\n  /**\n   * OPTIONAL - Mitigation Service URL provided by Netacea\n   */\n  mitigationServiceUrl?: string\n  /**\n   * Overridable HTTP implementation\n   * If this is not provided - AXIOS shoulld be installed as a peer dependency.\n   * Error thrown if this is not provided and AXIOS is not installed.\n   * Install axios with `npm i axios --save`\n   */\n  makeRequest?: MakeRequest\n}\nexport interface UpdateCaptchaArgs {\n  /**\n   * Incoming clients IP Address\n   */\n  clientIp: string\n  /**\n   * Event ID that Netacea provided on the `x-netacea-event-id` header\n   * This should be the eventID in realtion to the event when a user was served captcha\n   */\n  eventId: string\n  /**\n   * The entire `cookie` header received from the client\n   */\n  cookieHeader: string\n  /**\n   * Client's user-agent header\n   */\n  userAgent: string\n  /**\n   * Result of the captcha\n   * Captcha Passed = true\n   * Captcha Failed = false\n   */\n  result: boolean\n}\n\nexport interface UpdateCaptchaResponse {\n  /**\n   * The cookies object should be set as a set-cookie header in your origin server's response\n   * There will be a `_mitata` cookie and an optional `_mitatacaptcha` cookie set in this response.\n   * They follow the standard set-cookie header format.\n   */\n  cookies: string[]\n}\n\nexport interface MakeRequestArgs {\n  /**\n   * The URL so send the request to. This includes the path.\n   */\n  url: string\n  /**\n   * HTTP Method\n   */\n  method: 'POST'\n  /**\n   * Key, value of header values.\n   * These all need to be sent with the request.\n   */\n  headers: {[key: string]: string}\n  /**\n   * Request body to send with the request\n   */\n  body: {\n    result: boolean\n    eventId: string\n  }\n}\n\nexport interface MakeRequestResponse {\n  status: number\n  headers: {[key: string]: string}\n}\n\nexport default class CaptchaFeedback {\n  private readonly apiKey: string\n  private readonly mitigationServiceUrl: string\n  private readonly makeRequest?: MakeRequest\n  private axios: AxiosStatic | undefined\n  constructor ({\n    apiKey,\n    mitigationServiceUrl = 'https://mitigations.netacea.net',\n    makeRequest\n  }: CaptchaFeedbackArgs) {\n    if (apiKey === null || apiKey === undefined) {\n      throw new Error('Netacea: apiKey is a required parameter')\n    }\n    this.apiKey = apiKey\n    this.mitigationServiceUrl = mitigationServiceUrl\n    this.makeRequest = makeRequest\n  }\n\n  public async updateCaptcha ({\n    clientIp,\n    eventId,\n    cookieHeader,\n    result,\n    userAgent\n  }: UpdateCaptchaArgs): Promise<UpdateCaptchaResponse> {\n    try {\n      const response = await this.makeOutboundCall({\n        body: {\n          eventId,\n          result\n        },\n        headers: {\n          'content-type': 'application/json; charset=utf-8',\n          'x-netacea-api-key': this.apiKey,\n          'x-netacea-client-ip': clientIp,\n          'user-agent': userAgent,\n          'cookie': cookieHeader\n        },\n        method: 'POST',\n        url: `${this.mitigationServiceUrl}/UpdateCaptcha`\n      })\n      if (response.status !== 200) {\n        throw new Error(`Netacea: Non-200 status code returned from XHR call. Code was ${response.status}`)\n      }\n      const mitata = response.headers['x-netacea-mitata-value']\n      const mitataExpiry = response.headers['x-netacea-mitata-expiry']\n      const mitataCaptcha = response.headers['x-netacea-mitatacaptcha-value']\n      const mitataCaptchaExpiry = response.headers['x-netacea-mitatacaptcha-expiry']\n      return {\n        cookies: [\n          `_mitata=${mitata}; Max-Age=${mitataExpiry}; Path=/;`,\n          `_mitatacaptcha=${mitataCaptcha}; Max-Age=${mitataCaptchaExpiry}; Path=/;`\n        ]\n      }\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(e)\n      return {\n        cookies: []\n      }\n    }\n  }\n\n  private async getAxios (): Promise<AxiosStatic> {\n    return await import('axios') as unknown as AxiosStatic\n  }\n\n  private async makeAxiosRequest ({\n    body,\n    headers,\n    method,\n    url\n  }: MakeRequestArgs): Promise<MakeRequestResponse> {\n    if (this.axios === undefined) {\n      try {\n        // try to lazyload axios\n        this.axios = await this.getAxios()\n      } catch {\n        // Throw error as axios req wasn't met by `peerDependencies` and makeRequest was not implemented\n        throw new Error(['Netacea: Axios must be installed `(npm i axios --save)`',\n          'or makeRequest must be provided to override the default of axios being used.'].join(' '))\n      }\n    }\n    if (method === 'POST') {\n      const response = await this.axios.post(url, body, {\n        headers\n      })\n      return {\n        status: response.status,\n        headers: response.headers\n      }\n    }\n    throw new Error('Netacea: method not supported')\n  }\n\n  private async makeOutboundCall (args: MakeRequestArgs): Promise<MakeRequestResponse> {\n    if (this.makeRequest !== undefined) {\n      return await this.makeRequest(args)\n    }\n    return await this.makeAxiosRequest(args)\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"13a4ddf61f54fc2e939180fd15fa27e2f82965d7","contentHash":"4554265074f32aea475fb30628ad1f2eff99b0b4c5eae8f9771b9238ce79a7e8"}}