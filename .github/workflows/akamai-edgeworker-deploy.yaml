name: Deploy Akamai EdgeWorker
on:
  push:
    branches:
      - main
      - master
    paths:
      - integrations/akamai/**
      - ./**


jobs:

  deploy_edgeworker:
    runs-on: ubuntu-latest

    steps:
      - id: install_dependencies
        run: |
          wget -O akamai https://github.com/akamai/cli/releases/download/v1.4.1/akamai-1.4.1-linuxamd64
          chmod +x ./akamai
          mv ./akamai /usr/local/bin/akamai

      - id: install_akamai_modules
        run: |
          akamai install diagnostics
          akamai install edgeworkers
          akamai install property-manager
          akamai install sandbox

      - id: checkout
        uses: actions/checkout@v2

      - id: clean_dependencies_install
        run: |
          npm ci

      - id: run_akamai_unit_test
        working-directory: integrations/akamai
        run: |
          npm t

      - id: clean_akamai_dependencies_install
        working-directory: Examples/Akamai
        run: |
          npm ci

      - id: prepare_config_file
        working-directory: Examples/Akamai/src
        env: 
          TEST_DOMAIN_CONFIG: ${{ secrets.TEST_DOMAIN_CONFIG }}
        run: |
          echo $TEST_DOMAIN_CONFIG > config.json

      - id: prepare_akamai_credentials_file
        working-directory: /home/runner
        env: 
          AKAMAI_CREDENTIALS: ${{ secrets.AKAMAI_CREDENTIALS }}
        run: |
          echo "[default]" > .edgerc
          echo "$AKAMAI_CREDENTIALS" >> .edgerc
          echo "[papi]" >> .edgerc
          echo "$AKAMAI_CREDENTIALS" >> .edgerc
          echo "[diagnostics]" >> .edgerc
          echo "$AKAMAI_CREDENTIALS" >> .edgerc

      - id: run_deploy_production
        working-directory: Examples/Akamai
        run: |
          echo "AKAMAI_WORKER_ID=TOBECHANGED" > .env
          echo "AKAMAI_PROPERTY_HOST=TOBECHANGED" >> .env
          echo "AKAMAI_PROPERTY_NAME=TOBECHANGED" >> .env
          npm run deploy:production 
